
import os
import threading
from flask import Flask, request
import telebot
from telebot.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from keepalive import keep_alive
from google_sheets import GoogleSheetsManager

app = Flask(__name__)

# –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—Ä–∞—Ç—å—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN') or os.getenv('BOT_TOKEN') or '8102280931:AAFNx7zZOAV4QjRjNnNzB6edsgeXsLBFQss'
bot = telebot.TeleBot(TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets Manager
sheets_manager = GoogleSheetsManager()

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
user_states = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def create_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞", "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    markup.add("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "–ü–æ–º–æ—â—å")
    return markup

def create_cancel_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–û—Ç–º–µ–Ω–∞")
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "üöõ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NBM Japan!\n"
                 "üåè –í–∞—à–∞ –Ω–∞–¥–µ–∂–Ω–∞—è –∫–∞—Ä–≥–æ –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –Ø–ø–æ–Ω–∏–∏\n\n"
                 "üì¶ –ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n"
                 "üéå –ü—Ä—è–º—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –Ø–ø–æ–Ω–∏–∏\n\n"
                 "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=create_keyboard())

@bot.message_handler(commands=['register'])
def start_registration(message):
    user_states[message.from_user.id] = {'step': 'first_name'}
    bot.send_message(message.chat.id, "üìù –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=create_cancel_keyboard())

@bot.message_handler(commands=['setup_sheets'])
def setup_sheets_headers(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –≤ Google Sheets"""
    success, msg = sheets_manager.setup_headers()
    if success:
        bot.send_message(message.chat.id, f"‚úÖ {msg}")
    else:
        bot.send_message(message.chat.id, f"‚ùå {msg}")

@bot.message_handler(commands=['check_sheets'])
def check_sheets_config(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Google Sheets"""
    config_status = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if os.getenv('GOOGLE_SERVICE_ACCOUNT_JSON'):
        config_status.append("‚úÖ GOOGLE_SERVICE_ACCOUNT_JSON –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        config_status.append("‚ùå GOOGLE_SERVICE_ACCOUNT_JSON –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    if os.getenv('GOOGLE_SPREADSHEET_ID'):
        config_status.append(f"‚úÖ GOOGLE_SPREADSHEET_ID: {os.getenv('GOOGLE_SPREADSHEET_ID')}")
    else:
        config_status.append("‚ùå GOOGLE_SPREADSHEET_ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if sheets_manager.service:
        config_status.append("‚úÖ Google Sheets API –ø–æ–¥–∫–ª—é—á–µ–Ω")
    else:
        config_status.append("‚ùå Google Sheets API –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    response = "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Google Sheets:\n\n" + "\n".join(config_status)
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    user_id = message.from_user.id
    text = message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if user_id in user_states:
        if text == "–û—Ç–º–µ–Ω–∞":
            del user_states[user_id]
            bot.send_message(message.chat.id, "‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=create_keyboard())
            return
        
        state = user_states[user_id]
        
        if state['step'] == 'first_name':
            state['first_name'] = text
            state['step'] = 'last_name'
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:", reply_markup=create_cancel_keyboard())
            
        elif state['step'] == 'last_name':
            state['last_name'] = text
            state['step'] = 'phone'
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +996 000 000 000):", reply_markup=create_cancel_keyboard())
            
        elif state['step'] == 'phone':
            state['phone'] = text
            state['step'] = 'city'
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=create_cancel_keyboard())
            
        elif state['step'] == 'city':
            state['city'] = text
            state['step'] = 'comments'
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–ø–æ–∂–µ–ª–∞–Ω–∏—è, –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ—Å—Ç–∞–≤–∫–µ):", reply_markup=create_cancel_keyboard())
            
        elif state['step'] == 'comments':
            state['comments'] = text
            
            # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ Google Sheets
            success, msg = sheets_manager.add_client(
                state['first_name'],
                state['last_name'], 
                state['phone'],
                state['city'],
                state['comments'],
                str(user_id)
            )
            
            if success:
                bot.send_message(message.chat.id, 
                    f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ NBM Japan –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                    f"üìã –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                    f"–ò–º—è: {state['first_name']}\n"
                    f"–§–∞–º–∏–ª–∏—è: {state['last_name']}\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {state['phone']}\n"
                    f"–ì–æ—Ä–æ–¥/–°–µ–ª–æ: {state['city']}\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {state['comments']}\n\n"
                    f"üóÉÔ∏è {msg}\n\n"
                    f"üìû –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'",
                    reply_markup=create_keyboard())
            else:
                bot.send_message(message.chat.id, 
                    f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                    f"üìã –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                    f"–ò–º—è: {state['first_name']}\n"
                    f"–§–∞–º–∏–ª–∏—è: {state['last_name']}\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {state['phone']}\n"
                    f"–ì–æ—Ä–æ–¥/–°–µ–ª–æ: {state['city']}\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {state['comments']}\n\n"
                    f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É: {msg}\n\n"
                    f"üìû –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'",
                    reply_markup=create_keyboard())
            
            # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            del user_states[user_id]
        return
    
    # –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
        user = message.from_user
        response = (f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ NBM Japan:\n"
                   f"ID: {user.id}\n"
                   f"–ò–º—è: {user.first_name}\n"
                   f"–§–∞–º–∏–ª–∏—è: {user.last_name or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
                   f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}")
        bot.send_message(message.chat.id, response)
        
    elif text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞":
        start_registration(message)
        
    elif text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏":
        bot.send_message(message.chat.id, 
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã NBM Japan:\n\n"
            "üì± WhatsApp: +996 XXX XXX XXX\n"
            "üì± Telegram: @nbm_japan_support\n"
            "üìß Email: info@nbmjapan.kg\n\n"
            "üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 9:00 - 18:00 (–ü–ù-–°–ë)\n\n"
            "üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –¥–ª—è:\n"
            "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—ã–ª–∫–∏\n"
            "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º")
        
    elif text == "–ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, 
            "‚ÑπÔ∏è NBM Japan - –∫–∞—Ä–≥–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –Ø–ø–æ–Ω–∏–∏\n\n"
            "üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ\n"
            "üîπ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ\n"
            "üîπ –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ - –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–æ–≤\n\n"
            "üì¶ –£—Å–ª—É–≥–∏:\n"
            "‚Ä¢ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —è–ø–æ–Ω—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö\n"
            "‚Ä¢ –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –ø–æ—Å—ã–ª–æ–∫\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω\n"
            "‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤")
    else:
        bot.send_message(message.chat.id, f"ü§ñ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {text}")

# –í–µ–±—Ö—É–∫
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_data = request.get_json()
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return "OK", 200
    return "Bad Request", 400

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def run_bot():
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    try:
        bot.remove_webhook()
        # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º polling –≤–º–µ—Å—Ç–æ webhook
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling!")
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"üî¥ –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º keep-alive —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    keep_alive()
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    run_bot()
